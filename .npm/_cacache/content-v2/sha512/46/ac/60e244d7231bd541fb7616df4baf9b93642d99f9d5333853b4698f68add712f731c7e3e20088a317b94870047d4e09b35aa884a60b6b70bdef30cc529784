{"_id":"espress","_rev":"6-cd6fda6986b9e4beb452aa1bdac2b66a","name":"espress","description":"Express-inspired streaming-first web server","dist-tags":{"latest":"0.0.0"},"versions":{"0.0.0":{"name":"espress","version":"0.0.0","description":"Express-inspired streaming-first web server","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git://github.com/supershabam/espress"},"keywords":["streaming","websocket","web"],"author":{"name":"Ian Hansen"},"license":"MIT","bugs":{"url":"https://github.com/supershabam/espress/issues"},"homepage":"https://github.com/supershabam/espress","readme":"# espress\n\nREST web servers are great, and then we add \"realtime\" to them and figure out how to munge long-lived streaming responses into our app.\n\nWhat if we had a client and server that treated streaming responses as first-class citizens?\n\nWhat if a simple request/response cycle was just a short-lived, single event streaming response?\n\nThis is a framework to build that system.\n\n## goals\n\n* WebSocket based\n* Use only one websocket\n* Multiplex requests/response\n\n## LICENSE\n\nMIT\n\n","readmeFilename":"README.md","_id":"espress@0.0.0","dist":{"shasum":"6be3c6d3bff0bd6fb7bb6c3d557243b9c2a22f69","tarball":"https://registry.npmjs.org/espress/-/espress-0.0.0.tgz","integrity":"sha512-A0J9eUTWwqj/vaBgZUBaKwrre8TNR2OZIJu0mcVOWCMBUgKB6TTbTTHXeMhkNQw2KytxQxk3eMy4I3C3AG2GOQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDaBZcAutRgkeaQn9nZrUaKPZJxJuRiyUJsNxqih/M+KAIgMPrh2HsmtdYCOuHowOTJv7P98qjrcBbBjljRUBHV33g="}]},"_from":".","_npmVersion":"1.3.14","_npmUser":{"name":"supershabam","email":"ian@supershabam.com"},"maintainers":[{"name":"supershabam","email":"ian@supershabam.com"}],"directories":{}}},"readme":"# espress\n\nREST web servers are great, and then we add \"realtime\" to them and figure out how to munge long-lived streaming responses into our app.\n\nWhat if we had a client and server that treated streaming responses as first-class citizens?\n\nWhat if a simple request/response cycle was just a short-lived, single event streaming response?\n\nThis is a framework to build that system.\n\n## goals\n\n* WebSocket based\n* Use only one websocket\n* Multiplex requests/response\n\n## LICENSE\n\nMIT\n\n","maintainers":[{"name":"supershabam","email":"ian@supershabam.com"}],"time":{"modified":"2022-06-17T20:50:58.554Z","created":"2013-12-09T07:41:23.105Z","0.0.0":"2013-12-09T07:41:24.018Z"},"author":{"name":"Ian Hansen"},"repository":{"type":"git","url":"git://github.com/supershabam/espress"},"users":{}}